c
department_path(args)
c
`http://localhost:3000/departments/#{args}`
c
`http://localhost:3000/departments/?=#{args}`
c
'http://localhost:3000/departments/?'+4.to_query
@designation.department_id
c
@department.designations
@department.designation
@department
c
params
parameters
@department.id
params
@department
@designation
c
id
params[:id]
params
c
Department.find(params[:department_id])
params
c
params
c
Department.find(params[:id])
params
current_employee
current_user
c
params
c
@employee
@designation
c
@designation
c
@project.employees.find(@employee.id).destroy
 update or delete on table "employees" violates foreign key constraint "fk_rails_d80048421d" on table "assignedprojects"
@employee
c
@project.employees.find(@employee.id).delete
@project.employees.find(@employee.id)
project.employees.find(@employee.id)
project.employees.find_by(@employee.id)
project.employees.find_by(@employee)
project.employees.find(@employee.id)
project.employees.find(@employee)
project.employees.employee.id
project.employees.first
project
employee.id
employee
ap @project.employees.employee.id
ap @project.employees.@employee.id
ap @project.employees(@employee)
ap @project.employees.@employee
ap @project.employees.params(@employee)
@project.employees.params(@employee)
@project.employees.params(@employee).delete
@project.params(@employee).delete
@project.@employee.delete
@employee
c
@project.@employee.delete
@project.join.@employee.delete
@project.join. @employee.delete
@project.@employee.delete
@project
ap Project.first.employees.first.delete
ap Project.first.employees
ap Project.first.employees.distinct
ap Project.first.employees.distinct.count
ap Project.first.employees.distinct
ap Project.first.distinct.employees
ap Project.first.employees
Project.first.employees
@employee
@project
c
@project
@project.employees.delete.where(employee: @employee)
@project.employees.@employee.delete
@employee
c
@employee
@project
c
@project = Project.find(params[:project_id])
@project = Project.find(params[project_id])
object_id
object_ids
object_id.first
object_id
c
Project.find_by(params[object_id]).employees << (@employee)
Project.find_by(params[project_id]).employees << (@employee)
@project
c
params
c
@project.employees
Employee.first
Employee.all
Employee
Project.first
Project
@project
@project.id
params
@project
@project.id
@project>id
params
@employee
c
@employee
c 
params
c
@project
params
c
@employee
@project
c
Project.first.employees << (@employee)
Project.last.employees << (@employee)
@employee
@project
@employee
c
@employee
@project
@employee
c
@employee
@project.employees << (@employee)
@project
c
project_url.split("/").last.to_i
project_url.split("/").last
project_url.split("/")
project_url
c
last_project
team_url
project_team_url
projects_team_url
project
Project.find(project_url.split("/").last.to_i).employees << (@employee)
@project.find(project_url.split("/").last.to_i).employees << (@employee)
@project(project_url.split("/").last.to_i).employees << (@employee)
project_url.split("/").last.to_i.employees << (@employee)
project_url.split("/").last.to_i
project_url.split("/").last
project_url.split("/")
project_url.split(/)
project_url
project
current_project
@project
@employee
c
@project ||= Project.find(params[:id])
@project = Project.find(params[:id])
project ||= @project
@project
@employee
c
params
c
@attandence
c
@attandence
data
check_in
c
x
@attendence.save
@attendence.update(check_in: Time.now)
@attandence
c
current_employee.id
current_employee
current_employee.attandences.new(att_params)
c
current_employee.attandences.new(att_params)
current_employee.attandence.new(att_params)
current_employee.attandences.new(att_params)
current_employee.attandence.new(att_params)
current_employee.attandences.new(att_params)
params
c
Attandence.new(att_params)
params
@attendence
attendence
c
params
